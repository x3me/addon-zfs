#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2015, OpenNebula Project (OpenNebula.org), C12G Labs        #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

###############################################################################
# This script is used to remove a VM image (SRC) from the image repository
###############################################################################

# ------------ Set up the environment to source common tools ------------

if [ -z "${ONE_LOCATION}" ]; then
    LIB_LOCATION=/usr/lib/one
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    LIB_LOCATION=$ONE_LOCATION/lib
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
fi

source $TMCOMMON

DRIVER_PATH=$(dirname $0)
source ${DRIVER_PATH}/../libfs.sh
source ${DRIVER_PATH}/zfs.conf

# -------- Get rm and datastore arguments from OpenNebula core ------------

DRV_ACTION=$1
ID=$2

XPATH="${DRIVER_PATH}/../xpath.rb -b $DRV_ACTION"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH     /DS_DRIVER_ACTION_DATA/IMAGE/SOURCE \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/ZFS_CMD \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/BRIDGE_LIST \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/DATASET_NAME)

unset i

SRC="${XPATH_ELEMENTS[i++]}"
ZFS_CMD="${XPATH_ELEMENTS[i++]:-$ZFS_CMD}"
BRIDGE_LIST="${XPATH_ELEMENTS[i++]}"
DATASET_NAME="${XPATH_ELEMENTS[i++]:-$DATASET_NAME}"

DST_HOST=`get_destination_host $ID`

if [ -z "$DST_HOST" ]; then
    error_message "Datastore template missing 'BRIDGE_LIST' attribute."
    exit -1
fi

SRC_PATH=`arg_path $SRC`
DEV="/dev/zvol/$SRC_PATH"

RM_COMMAND=$(cat <<EOF
    set -e
    $SYNC

    ${ZFS_CMD} list -H -r -t snapshot -o name $SRC_PATH | while read SNAPSHOT; do
        CLONE=\$(${ZFS_CMD} get -H -o value clones \$SNAPSHOT)

        if [ "\$CLONE" != "-" ]; then
            $ZFS_CMD promote \$CLONE
        fi
    done

    ORIGIN=\$(${ZFS_CMD} get -H -o value origin $SRC_PATH)

    ${ZFS_CMD} destroy -r $SRC_PATH

    if [ "\$ORIGIN" != "-" ]; then
        ${ZFS_CMD} destroy \$ORIGIN
    fi

EOF
)

log "Removing $DST_HOST:$DEV from the image repository"

ssh_exec_and_log "$DST_HOST" "$RM_COMMAND" \
    "Error removing $DST_HOST:$DEV"

exit 0
